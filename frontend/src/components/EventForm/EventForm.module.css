.formContainer {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 24px;
  padding: 2rem;
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  animation: fadeIn 0.5s ease-in-out;
}

.formContainer:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 40px 0 rgba(31, 38, 135, 0.5);
}

.form {
  width: 100%;
  margin-top: 0;
}

.fieldset {
  width: 100%;
  border: none;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.field {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 600;
  color: #4a5568;
  font-size: 0.875rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.input {
  width: 100%;
  padding: 1rem 1.25rem;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  color: #1a1a1a;
  font-size: 1rem;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  outline: none;
  font-family: inherit;
}

.input::placeholder {
  color: rgba(26, 26, 26, 0.6);
}

.input:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.input.error {
  border-color: #ff6b6b;
  box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.1);
}

.input:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: rgba(255, 255, 255, 0.05);
}

.textarea {
  width: 100%;
  padding: 1rem 1.25rem;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  color: #1a1a1a;
  font-size: 1rem;
  font-family: inherit;
  resize: vertical;
  min-height: 120px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  outline: none;
}

.textarea::placeholder {
  color: rgba(26, 26, 26, 0.6);
}

.textarea:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.textarea:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background: rgba(255, 255, 255, 0.05);
}

.dateTimeRow {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
}

/* Material-UI TextField Override */
.textField {
  background: rgba(255, 255, 255, 0.1) !important;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 12px !important;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.textField :global(.MuiOutlinedInput-root) {
  background: rgba(255, 255, 255, 0.1) !important;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 12px !important;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.textField :global(.MuiOutlinedInput-root:hover) {
  background: rgba(255, 255, 255, 0.15) !important;
}

.textField :global(.MuiOutlinedInput-root.Mui-focused) {
  background: rgba(255, 255, 255, 0.2) !important;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1) !important;
}

.textField :global(.MuiOutlinedInput-notchedOutline) {
  border: 2px solid rgba(255, 255, 255, 0.2) !important;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.textField :global(.MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline) {
  border-color: rgba(255, 255, 255, 0.3) !important;
}

.textField :global(.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline) {
  border-color: #667eea !important;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1) !important;
}

.textField :global(.MuiInputLabel-root) {
  color: #1a1a1a !important;
  font-weight: 600 !important;
  font-size: 0.875rem !important;
  text-transform: uppercase !important;
  letter-spacing: 0.5px !important;
}

.textField :global(.MuiInputLabel-root.Mui-focused) {
  color: #667eea !important;
}

.textField :global(.MuiInputLabel-root.MuiFormLabel-filled) {
  color: #1a1a1a !important;
}

.textField :global(.MuiInputLabel-root.MuiInputLabel-shrink) {
  color: #1a1a1a !important;
}

.textField :global(.MuiInputLabel-root.MuiInputLabel-animated) {
  color: #1a1a1a !important;
}

/* Ensure labels are always visible */
.textField :global(.MuiFormLabel-root) {
  color: #1a1a1a !important;
  font-weight: 600 !important;
  font-size: 0.875rem !important;
  text-transform: uppercase !important;
  letter-spacing: 0.5px !important;
}

/* Override any Material-UI label styling */
.textField :global(.MuiInputLabel-root),
.textField :global(.MuiFormLabel-root),
.textField :global(.MuiInputLabel-formControl),
.textField :global(.MuiInputLabel-outlined) {
  color: #1a1a1a !important;
  font-weight: 600 !important;
  font-size: 0.875rem !important;
  text-transform: uppercase !important;
  letter-spacing: 0.5px !important;
  opacity: 1 !important;
  visibility: visible !important;
}

.textField :global(.MuiInputBase-input) {
  color: #1a1a1a !important;
  font-size: 1rem !important;
  padding: 1rem 1.25rem !important;
}

.textField :global(.MuiInputBase-input::placeholder) {
  color: rgba(26, 26, 26, 0.6) !important;
}

.textField :global(.MuiFormHelperText-root) {
    font-size: 0.875rem !important;
  font-weight: 500 !important;
  margin-top: 0.25rem !important;
}


.buttonGroup {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.cancelButton {
  background: rgba(255, 255, 255, 0.1) !important;
  backdrop-filter: blur(10px) !important;
  -webkit-backdrop-filter: blur(10px) !important;
  border: 1px solid rgba(255, 255, 255, 0.2) !important;
  border-radius: 12px !important;
  color: #4a5568 !important;
  font-weight: 600 !important;
  font-size: 0.875rem !important;
  padding: 0.875rem 1.5rem !important;
  text-transform: none !important;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
  box-shadow: 0 4px 15px 0 rgba(0, 0, 0, 0.1) !important;
}

.cancelButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.2) !important;
  transform: translateY(-2px) !important;
  box-shadow: 0 8px 25px 0 rgba(0, 0, 0, 0.2) !important;
}

.cancelButton:active:not(:disabled) {
  transform: translateY(0) !important;
}

.cancelButton:disabled {
  opacity: 0.6 !important;
  cursor: not-allowed !important;
}

.submitButton {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  border: none !important;
  border-radius: 12px !important;
  color: white !important;
  font-weight: 600 !important;
  font-size: 0.875rem !important;
  padding: 0.875rem 1.5rem !important;
  text-transform: none !important;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
  box-shadow: 0 4px 15px 0 rgba(102, 126, 234, 0.4) !important;
  position: relative !important;
  overflow: hidden !important;
}

.submitButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.submitButton:hover::before {
  left: 100%;
}

.submitButton:hover:not(:disabled) {
  background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%) !important;
  transform: translateY(-2px) !important;
  box-shadow: 0 8px 25px 0 rgba(102, 126, 234, 0.6) !important;
}

.submitButton:active:not(:disabled) {
  transform: translateY(0) !important;
}

.submitButton:disabled {
  opacity: 0.6 !important;
  cursor: not-allowed !important;
  transform: none !important;
}

.loadingSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.errorMessage {
  color: #ff6b6b;
  font-size: 0.875rem;
  font-weight: 500;
  margin-top: 0.25rem;
}